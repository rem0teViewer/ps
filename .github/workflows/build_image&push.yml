name: Docker Images Build & Push

#on:
#  pull_request:
#    types: [opened, reopened]
#    branches: [develop]
on:
  push:
    branches: "**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_image_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Set execute permissions for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lower case repo name
        run: echo "REPO_NAME_LC=${REPO_NAME,,}" >> $GITHUB_ENV
        env:
          REPO_NAME: '${{ github.repository }}'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image for paymentService
        uses: docker/build-push-action@v5
        with:
          context: ./product-service-module
          file: ./product-service-module/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image for e2e
        uses: docker/build-push-action@v5
        with:
          context: ./e2e
          file: ./e2e/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}